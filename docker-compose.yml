services:
    nginx:
        image: nginx:1.25-alpine
        depends_on:
            - frontend-client
            - minio
            - service-auth-app
            - service-products-app
            - swagger-ui
        volumes:
            - ./infra/nginx/nginx.conf:/etc/nginx/nginx.conf:ro
        ports:
            - "${NGINX_PORT:-80}:80"
        networks:
            - internal

    minio:
        image: minio/minio:latest
        environment:
            MINIO_ROOT_USER: minioadmin
            MINIO_ROOT_PASSWORD: minioadmin
        command: server /data --console-address ":9001"
        networks:
            - internal

    frontend-client:
        build: ./frontend/client
        deploy:
            restart_policy:
                condition: on-failure
                delay: 2s
                window: 60s
        networks:
            - internal

    swagger-ui:
        build: ./infra/swagger-ui
        depends_on:
            - service-auth-app
            - service-products-app
        volumes:
            - ./infra/swagger-ui/nginx.conf:/etc/nginx/conf.d/extra.conf:ro
            - ./backend/services/auth/docs:/service-auth-docs
            - ./backend/services/products/docs:/service-products-docs
        networks:
            - internal

    service-auth-db:
        image: postgres:16
        environment:
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: password
            POSTGRES_DB: service-db
        healthcheck:
            test: ["CMD-SHELL", "sh -c 'pg_isready -U postgres -d service-db'"]
            interval: 5s
            timeout: 10s
            retries: 5
            start_period: 10s
        networks:
            - internal

    service-auth-app:
        build:
            context: ./backend
            dockerfile: services/auth/deployments/app/Dockerfile
        environment:
            APP_IS_PROD: true
            DB_URI: postgres://postgres:password@service-auth-db:5432/service-db
            SECRETS_JWT: T9vq75NyopB05w2iO8Hp4iduv9xHD5woYWgfEDZmpKOOd4CDC8
            HTTP_UNDER_PROXY: true
        depends_on:
            service-auth-db:
                condition: service_healthy
        deploy:
            restart_policy:
                condition: on-failure
                delay: 2s
                window: 60s
        networks:
            - internal

    service-products-db:
        image: postgres:16
        environment:
            POSTGRES_USER: postgres
            POSTGRES_PASSWORD: password
            POSTGRES_DB: service-db
        healthcheck:
            test: ["CMD-SHELL", "sh -c 'pg_isready -U postgres -d service-db'"]
            interval: 5s
            timeout: 10s
            retries: 5
            start_period: 10s
        networks:
            - internal

    service-products-app:
        build:
            context: ./backend
            dockerfile: services/products/deployments/app/Dockerfile
        environment:
            APP_IS_PROD: true
            DB_URI: postgres://postgres:password@service-products-db:5432/service-db
            SECRETS_JWT: T9vq75NyopB05w2iO8Hp4iduv9xHD5woYWgfEDZmpKOOd4CDC8
            HTTP_UNDER_PROXY: true
            STORAGE_S3_ENDPOINT: http://minio:9000
            STORAGE_S3_URL: /files
        depends_on:
            service-products-db:
                condition: service_healthy
        deploy:
            restart_policy:
                condition: on-failure
                delay: 2s
                window: 60s
        networks:
            - internal

    service-products-cron:
        build:
            context: ./backend
            dockerfile: services/products/deployments/cron/Dockerfile
        environment:
            APP_IS_PROD: true
            DB_URI: postgres://postgres:password@service-products-db:5432/service-db
            STORAGE_S3_ENDPOINT: http://minio:9000
            STORAGE_S3_URL: /files
        depends_on:
            service-products-db:
                condition: service_healthy
        deploy:
            restart_policy:
                condition: on-failure
                delay: 2s
                window: 60s
        networks:
            - internal

networks:
    internal:
